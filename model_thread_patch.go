/*
LangGraph Platform

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package langgraphgo

import (
	"encoding/json"
)

// checks if the ThreadPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThreadPatch{}

// ThreadPatch Payload for creating a thread.
type ThreadPatch struct {
	// Metadata to merge with existing thread metadata.
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ThreadPatch ThreadPatch

// NewThreadPatch instantiates a new ThreadPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreadPatch() *ThreadPatch {
	this := ThreadPatch{}
	return &this
}

// NewThreadPatchWithDefaults instantiates a new ThreadPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreadPatchWithDefaults() *ThreadPatch {
	this := ThreadPatch{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ThreadPatch) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreadPatch) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ThreadPatch) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *ThreadPatch) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o ThreadPatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThreadPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ThreadPatch) UnmarshalJSON(data []byte) (err error) {
	varThreadPatch := _ThreadPatch{}

	err = json.Unmarshal(data, &varThreadPatch)

	if err != nil {
		return err
	}

	*o = ThreadPatch(varThreadPatch)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "metadata")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableThreadPatch struct {
	value *ThreadPatch
	isSet bool
}

func (v NullableThreadPatch) Get() *ThreadPatch {
	return v.value
}

func (v *NullableThreadPatch) Set(val *ThreadPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableThreadPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableThreadPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreadPatch(val *ThreadPatch) *NullableThreadPatch {
	return &NullableThreadPatch{value: val, isSet: true}
}

func (v NullableThreadPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreadPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


